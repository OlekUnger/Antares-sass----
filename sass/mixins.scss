$orange-color: #df5f47;
$dark-text: #24262a;
$text-color: #666;
$light-gray: #f3f3f3;
$white-color: #fff;


@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}
// size
@mixin size($value) {
  $width: nth($value, 1);
  $height: $width;

  @if length($value) > 1 {
    $height: nth($value, 2);
  }

  @if is-size($height) {
    height: $height;
  } @else {
    @warn "`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.";
  }

  @if is-size($width) {
    width: $width;
  } @else {
    @warn "`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.";
  }
}

@mixin inline-top {
	display: inline-block;
	vertical-align: top;
}

@mixin inline-middle {
  display: inline-block;
  vertical-align: middle;
}

@mixin inline-bottom {
  display: inline-block;
  vertical-align: bottom;
}


@for $i from 1 through 5{

  .link-#{$i} {
    background-image: url(../img/pictures/icon-#{$i}.png)
  }
}

@mixin triangle($direction, $size, $color) {
  content:"";
  display: block;
  position: absolute;
  height: 20px;
  width: 20px;
  @if($direction=='up') {
    border-bottom: $size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction=='down'){
    border-top: $size solid $color;
    border-left: 1/2*$size solid transparent;
    border-right: 1/2*$size solid transparent;
  }
  @else if ($direction=='left'){
    border-right: $size solid $color;
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
  }
  @else if ($direction=='left'){
    border-left: $size solid $color;
    border-top: 1/2*$size solid transparent;
    border-bottom: 1/2*$size solid transparent;
  }
}